---
import { store } from './store';

interface Props {
	label: string;
	storeKey: keyof typeof store;
	type: 'hue' | 'chroma';
}
const { label, storeKey, type } = Astro.props;

const { max, step } = { hue: { max: 360, step: 1 }, chroma: { max: 0.27, step: 0.001 } }[type];
const value = store[storeKey].get()[type];
---

<value-slider data-store={storeKey} data-type={type}>
	<label>
		<span>{label}</span>
		<input type="range" {max} {step} {value} />
		<span class="value">{value}</span>
	</label>
</value-slider>
<br>

<script>
	import { store } from './store';

	class ValueSlider extends HTMLElement {
		#input = this.querySelector('input')!;
		#output = this.querySelector<HTMLSpanElement>('.value')!;
		#store = store[this.dataset.store as keyof typeof store];
		#type = this.dataset.type as 'hue' | 'chroma';
		#formatter = new Intl.NumberFormat(document.documentElement.lang || 'en');

		constructor() {
			super();
			this.#input.addEventListener('input', () =>
				this.#store.setKey(this.#type, this.#input.valueAsNumber)
			);
			this.#store.subscribe((v) => {
				const newValue = v[this.#type];
				this.#input.value = String(newValue);
				this.#output.innerText = this.#formatter.format(newValue);
			});
		}
	}
	customElements.define('value-slider', ValueSlider);
</script>

<style>



input[type=range] {
-webkit-appearance: none;
margin: 10px 0;
width: 100%;
}
input[type=range]:focus {
outline: none;
}
input[type=range]::-webkit-slider-runnable-track {
width: 100%;
height: 12.8px;
cursor: pointer;
animate: 0.2s;
box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
background: #007bff;
border-radius: 25px;
border: 0px solid #000101;
}
input[type=range]::-webkit-slider-thumb {
box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
border: 0px solid #000000;
height: 20px;
width: 39px;
border-radius: 7px;
background: #fff;
cursor: pointer;
box-shadow: 0px 0px 5px rgb(143, 143, 143);
-webkit-appearance: none;
margin-top: -3.6px;
}
input[type=range]:focus::-webkit-slider-runnable-track {
background: #007bff;
}



</style>
